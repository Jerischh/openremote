apply plugin: "java"
apply plugin: 'jacoco'
apply plugin: "groovy"

dependencies {

    compile "org.codehaus.groovy:groovy:$groovyVersion"

    compile resolveProject(":manager")
    compile resolveProject(":client")

    compile "junit:junit:$junitVersion"
    compile "org.spockframework:spock-core:$spockVersion"

    compile "org.glassfish.tyrus:tyrus-client:$tyrusVersion"
    compile "org.glassfish.tyrus:tyrus-container-grizzly-client:$tyrusVersion"
    compile "org.objenesis:objenesis:$objenesisVersion"
    compile "net.bytebuddy:byte-buddy:$byteBuddyVersion"

    // We must have this on the regular classpath because we do weird
    // things with GWT in tests, but without the transitive runtime
    // dependencies for code server
    compile("com.google.gwt:gwt-dev:$gwtVersion") {
        exclude group: "com.google.code.gson"
        exclude group: "org.ow2.asm"
        exclude group: "colt"
        exclude group: "ant"
        exclude group: "commons-collections"
        exclude group: "commons-io"
        exclude group: "com.ibm.icu"
        exclude group: "tapestry"
        exclude group: "net.sourceforge.htmlunit"
        exclude group: "org.eclipse.jetty"
    }

    compile("com.github.calimero:calimero-server:$calimeroVersion") {
        // Libraries should not depend on a logging implementation and/or alpha versions!
        exclude group: "org.slf4j"
    }
}

test {
    workingDir = findProject(":openremote") != null ? resolveProject("").projectDir : rootProject.projectDir
    testLogging {
        outputs.upToDateWhen {false}
        // Enable this to show STDOUT/STDERR on console when running tests
        // showStandardStreams = true
    }

    // reports {
    //     junitXml.enabled = true
    // }
}
